// Project Euler - Even Fibonacci numbers
// Problem 2
// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
//
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
//
// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

// Expected result: 4613732

// define an infinite sequence starting with 2
var fibonacci-sequence = \() {
   var prev-prev = 1
   var prev = 1
   return \() {
      var val = [prev-prev + prev]
      set prev-prev = prev
      set prev = val
      return val
   }
}

var result = (pipe fibonacci-sequence 
                   (take-while \x [x < 4000000])
                   (filter \x [[x % 2] = 0])
                   (reduce +))

(println result)
